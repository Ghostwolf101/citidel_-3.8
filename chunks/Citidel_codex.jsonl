{"doc_id": "Citidel_codex", "chunk_id": "Citidel_codex__0", "chunk_text": "<!doctype html>\n<html>\n<head>\n  <meta charset=\"utf-8\"/>\n  <title>Citadel Codex — Offline Viewer (No Python)</title>\n  <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\"/>\n  <style>\n    :root { --bg:#0b1020; --fg:#e8eefc; --muted:#9bb0d6; --card:#141a33; --acc:#8aa2ff; }\n    body { background:var(--bg); color:var(--fg); font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial; margin:0; }\n    header { padding:16px 20px; border-bottom:1px solid #243055; position:sticky; top:0; background:linear-gradient(180deg, rgba(11,16,32,.95), rgba(11,16,32,.8)); backdrop-filter: blur(6px); }\n    h1 { margin:0; font-size:20px; letter-spacing:.5px; }\n    .container { max-width:1100px; margin:0 auto; padding:20px; }\n    .panel { background:#0e1430; border:1px dashed #2b3866; padding:12px; border-radius:12px; color:var(--muted); }\n    .panel strong { color:var(--fg); }\n    .panel input[type=file] { margin-top:8px; }\n    .search { display:flex; gap:10px; margin:16px 0 8px; }\n    input[type=text] { flex:1; padding:12px 14px; border-radius:12px; border:1px solid #2b3866; background: #0e1430; color:var(--fg); }\n    button { padding:12px 16px; border-radius:12px; border:1px solid #2b3866; background:#17224a; color:var(--fg); cursor:pointer; }\n    button:hover { background:#1d2a5c; }\n    .grid { display:grid; grid-template-columns: repeat(auto-fit, minmax(260px, 1fr)); gap:14px; margin-top:12px; }\n    .card { background:var(--card); border:1px solid #22305a; border-radius:16px; padding:14px; display:flex; flex-direction:column; gap:8px; }\n    .badge { font-size:12px; color:var(--muted); }\n    .title { font-weight:700; }\n    .topics { font-size:12px; color:var(--muted); }\n    .muted { color:var(--muted); font-size:12px; }\n    footer { text-align:center; color:#7d90c7; padding:20px; }\n    .hint { font-size:12px; color:#9bb0d6; margin-top:6px; }\n    .filebadge { display:inline-block; background:#0e1430; border:1px solid #2b3866; padding:4px 8px; border-radius:10px; margin-right:6px; font-size:12px; color:#9bb0d6;}\n    .row { display:flex; gap:10px; align-items:center; flex-wrap:wrap; }\n    details { background:#0f1635; border:1px solid #243055; border-radius:10px; padding:8px 10px; }\n    summary { cursor:pointer; color:#9bb0d6; }\n    pre { white-space: pre-wrap; word-wrap: break-word; background:#0b112b; border:1px solid #1f2f59; padding:10px; border-radius:10px; max-height:320px; overflow:auto; }\n  </style>\n</head>\n<body>\n<header>\n  <h1>Citadel Codex — Offline Viewer</h1>\n  <div class=\"container\">\n    <div class=\"panel\" id=\"dropzone\">\n      <div><strong>Load files (drag/drop or pick):</strong></div>\n      <div class=\"row\">\n        <label>Cards JSON: <input type=\"file\" id=\"cardsFile\" accept=\".json\"/></label>\n        <label>Index JSON: <input type=\"file\" id=\"indexFile\" accept=\".json\"/></label>\n        <label>Bundle (optional): <input type=\"file\" id=\"bundleFile\" accept=\".json\"/></label>\n        <button id=\"clearBtn\">Clear</butt", "source_filename": "Citidel_codex", "source_sha256": "f9bb5d4fafe84875bc1d87ec69212eb616e74af3eb1796dc4f5800f4418ddef9", "chunk_index": 0, "total_chunks": 4}
{"doc_id": "Citidel_codex", "chunk_id": "Citidel_codex__1", "chunk_text": "JSON: <input type=\"file\" id=\"indexFile\" accept=\".json\"/></label>\n        <label>Bundle (optional): <input type=\"file\" id=\"bundleFile\" accept=\".json\"/></label>\n        <button id=\"clearBtn\">Clear</button>\n      </div>\n      <div class=\"hint\">Use <code>citadel_codex_cards.json</code> and <code>citadel_library_index.json</code>. The Bundle enables deep lookups.</div>\n      <div id=\"loadedBadges\" style=\"margin-top:6px;\"></div>\n    </div>\n\n    <form class=\"search\" onsubmit=\"event.preventDefault(); doSearch();\">\n      <input type=\"text\" id=\"q\" placeholder=\"Search titles, topics, or summaries…\"/>\n      <button type=\"button\" onclick=\"doSearch()\">Search</button>\n      <button type=\"button\" onclick=\"resetSearch()\">Reset</button>\n      <span class=\"muted\" id=\"count\"></span>\n    </form>\n  </div>\n</header>\n\n<div class=\"container\">\n  <div class=\"grid\" id=\"grid\"></div>\n\n  <details style=\"margin-top:24px;\" id=\"bundlePanel\" hidden>\n    <summary>Bundle Snapshot</summary>\n    <div class=\"muted\">Quick peek from the loaded Codex Bundle (titles & security presence)</div>\n    <pre id=\"bundleInfo\"></pre>\n  </details>\n</div>\n\n<footer>No Python. No server. Your files never leave the browser.</footer>\n\n<script>\nlet CARDS = [];\nlet INDEX = [];\nlet BUNDLE = null;\n\nfunction renderBadges(){\n  const el = document.getElementById('loadedBadges');\n  const items = [];\n  if (CARDS.length) items.push(`<span class=\"filebadge\">Cards ✓ (${CARDS.length})</span>`);\n  if (INDEX.length) items.push(`<span class=\"filebadge\">Index ✓ (${INDEX.length})</span>`);\n  if (BUNDLE) items.push(`<span class=\"filebadge\">Bundle ✓</span>`);\n  el.innerHTML = items.join(\" \");\n}\n\nfunction byId(id){ return document.getElementById(id); }\nfunction norm(s){ return (s||\"\").toString().toLowerCase().replace(/\\s+/g,\" \").trim(); }\n\nfunction renderCards(list){\n  const grid = byId('grid');\n  grid.innerHTML = \"\";\n  const count = byId('count');\n  count.textContent = (list.length || 0) + \" item(s) \" + (byId('q').value ? \"matched\" : \"loaded\");\n\n  list.forEach(c => {\n    const div = document.createElement('div');\n    div.className = 'card';\n    const topics = (c.key_topics || []).join(\", \");\n    div.innerHTML = `\n      <div class=\"badge\">${c.category || \"uncategorized\"}</div>\n      <div class=\"title\">${c.id || \"\"} — ${c.title || \"(untitled)\"} </div>\n      <div class=\"summary\">${c.summary || \"\"}</div>\n      ${topics ? `<div class=\"topics\">Topics: ${topics}</div>` : \"\"}\n      ${c.origin_file ? `<div class=\"muted\">File: ${c.origin_file}</div>` : \"\"}\n      ${BUNDLE ? `<button style=\"margin-top:8px\" onclick='showBundle(\"${c.origin_file||\"\"}\")'>Peek in Bundle</button>` : \"\"}\n    `;\n    grid.appendChild(div);\n  });\n}\n\nfunction doSearch(){\n  const q = norm(byId('q').value);\n  if (!q){ renderCards(CARDS); return; }\n  const res = CARDS.filter(c => {\n    const hay = [c.id, c.title, c.summary, (c.key_topics||[]).join(\" \"), c.category].join(\" \");\n    return norm(hay).includes(q);\n  });\n  renderCards(res);\n}\n\nfunction resetSearch(){\n  byI", "source_filename": "Citidel_codex", "source_sha256": "f9bb5d4fafe84875bc1d87ec69212eb616e74af3eb1796dc4f5800f4418ddef9", "chunk_index": 1, "total_chunks": 4}
{"doc_id": "Citidel_codex", "chunk_id": "Citidel_codex__2", "chunk_text": "lter(c => {\n    const hay = [c.id, c.title, c.summary, (c.key_topics||[]).join(\" \"), c.category].join(\" \");\n    return norm(hay).includes(q);\n  });\n  renderCards(res);\n}\n\nfunction resetSearch(){\n  byId('q').value = \"\";\n  renderCards(CARDS);\n}\n\nfunction loadJSONFile(input, target){\n  const file = input.files[0];\n  if (!file) return;\n  const reader = new FileReader();\n  reader.onload = e => {\n    try {\n      const data = JSON.parse(e.target.result);\n      if (target === 'cards') CARDS = data;\n      if (target === 'index') INDEX = data;\n      if (target === 'bundle') BUNDLE = data;\n      renderBadges();\n      if (target === 'cards') renderCards(CARDS);\n      if (target === 'bundle') renderBundleInfo();\n    } catch(err){\n      alert(\"Invalid JSON: \" + err.message);\n    }\n  };\n  reader.readAsText(file);\n}\n\nfunction showBundle(origin){\n  if (!BUNDLE){ alert(\"Load the Bundle first.\"); return; }\n  const present = (BUNDLE.sources && BUNDLE.sources.present) || {};\n  let found = null;\n  for (const [key, obj] of Object.entries(present)){\n    if (obj.path && origin && obj.path.endsWith(\"/\"+origin)){\n      found = obj; break;\n    }\n  }\n  const out = byId('bundleInfo');\n  byId('bundlePanel').hidden = false;\n  if (!found){\n    out.textContent = \"No bundle entry found for: \" + origin + \"\\n\\nAvailable keys:\\n\" + Object.keys(present).join(\", \");\n  } else {\n    out.textContent = JSON.stringify({\n      key: origin,\n      path: found.path,\n      sha256: found.sha256,\n      content_preview: found.content_preview || (typeof found.content === 'string' ? found.content.slice(0,800) : \"(structured or long)\")\n    }, null, 2);\n  }\n  out.scrollIntoView({behavior:'smooth'});\n}\n\n// Drag & drop\nconst dropzone = byId('dropzone');\ndropzone.addEventListener('dragover', e => { e.preventDefault(); dropzone.style.borderColor = '#3b4fa0'; });\ndropzone.addEventListener('dragleave', e => { dropzone.style.borderColor = '#2b3866'; });\ndropzone.addEventListener('drop', e => {\n  e.preventDefault();\n  dropzone.style.borderColor = '#2b3866';\n  const files = Array.from(e.dataTransfer.files);\n  files.forEach(f => {\n    if (f.name.endsWith(\"cards.json\")) {\n      const input = byId('cardsFile'); input.files = createFileList([f]); loadJSONFile(input, 'cards');\n    } else if (f.name.endsWith(\"library_index.json\")) {\n      const input = byId('indexFile'); input.files = createFileList([f]); loadJSONFile(input, 'index');\n    } else if (f.name.includes(\"Bundle\") && f.name.endsWith(\".json\")) {\n      const input = byId('bundleFile'); input.files = createFileList([f]); loadJSONFile(input, 'bundle');\n    }\n  });\n});\n// helper to programmatically set <input type=file>.files\nfunction createFileList(files) {\n  const dt = new DataTransfer();\n  files.forEach(f => dt.items.add(f));\n  return dt.files;\n}\nbyId('cardsFile').addEventListener('change', e => loadJSONFile(e.target, 'cards'));\nbyId('indexFile').addEventListener('change', e => loadJSONFile(e.target, 'index'));\nbyId('bundleFile').addEventListener('change', e", "source_filename": "Citidel_codex", "source_sha256": "f9bb5d4fafe84875bc1d87ec69212eb616e74af3eb1796dc4f5800f4418ddef9", "chunk_index": 2, "total_chunks": 4}
{"doc_id": "Citidel_codex", "chunk_id": "Citidel_codex__3", "chunk_text": "').addEventListener('change', e => loadJSONFile(e.target, 'cards'));\nbyId('indexFile').addEventListener('change', e => loadJSONFile(e.target, 'index'));\nbyId('bundleFile').addEventListener('change', e => loadJSONFile(e.target, 'bundle'));\nbyId('clearBtn').addEventListener('click', () => { CARDS=[]; INDEX=[]; BUNDLE=null; renderBadges(); renderCards([]); byId('bundlePanel').hidden=true; byId('bundleInfo').textContent=\"\"; });\n</script>\n</body>\n</html>\n<!-- replace with -->\n${topics ? `<div class=\"topics\">Topics:\n${topics}</div>` : \"\"}", "source_filename": "Citidel_codex", "source_sha256": "f9bb5d4fafe84875bc1d87ec69212eb616e74af3eb1796dc4f5800f4418ddef9", "chunk_index": 3, "total_chunks": 4}
